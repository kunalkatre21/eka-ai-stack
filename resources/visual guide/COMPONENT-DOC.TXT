Based on the attached files, I've identified numerous reusable components from your design system. Here are the key components extracted and converted into modular HTML/CSS/JS code:

## 1. Glass Card Component

```html
<!-- Glass Card -->
<div class="glass-card">
  <div class="glass-card-header">
    <h3 class="glass-card-title">Card Title</h3>
    <span class="glass-card-badge">New</span>
  </div>
  <div class="glass-card-content">
    <p>Your content goes here...</p>
  </div>
  <div class="glass-card-actions">
    <button class="glass-btn-primary">Action</button>
    <button class="glass-btn-secondary">Cancel</button>
  </div>
</div>
```

```css
/* Glass Card Component */
.glass-card {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 1rem;
  padding: 1.5rem;
  transition: all 0.3s ease;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.glass-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
  border-color: rgba(255, 255, 255, 0.3);
}

.glass-card-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.glass-card-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0;
  color: #1a1a1a;
}

.glass-card-badge {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.75rem;
  font-weight: 500;
}

.glass-card-content {
  margin-bottom: 1.5rem;
  color: #4a5568;
  line-height: 1.6;
}

.glass-card-actions {
  display: flex;
  gap: 0.75rem;
}

/* Dark theme variant */
.glass-card.dark {
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.glass-card.dark .glass-card-title {
  color: #f7fafc;
}

.glass-card.dark .glass-card-content {
  color: #a0aec0;
}
```

## 2. Hero Section Component

```html
<!-- Hero Section -->
<section class="hero-section">
  <div class="hero-background">
    <div class="bg-grid"></div>
    <div class="gradient-orb orb-1"></div>
    <div class="gradient-orb orb-2"></div>
    <div class="gradient-orb orb-3"></div>
  </div>
  
  <div class="hero-container">
    <div class="hero-content">
      <div class="hero-badge">
        <span class="badge-text">âœ¨ New Feature Available</span>
        <div class="badge-glow"></div>
      </div>
      
      <h1 class="hero-title">
        Think. <span class="gradient-text">Connect.</span> Remember.
      </h1>
      
      <p class="hero-description">
        The most advanced platform designed for teams who refuse to compromise on quality.
      </p>
      
      <div class="hero-actions">
        <button class="cta-primary">Get Started</button>
        <button class="cta-secondary">Learn More</button>
      </div>
    </div>
    
    <div class="hero-visual">
      <div class="app-preview" id="appPreview">
        <div class="app-interface">
          <div class="interface-sidebar">
            <div class="sidebar-item active">Dashboard</div>
            <div class="sidebar-item">Projects</div>
            <div class="sidebar-item">Analytics</div>
          </div>
          <div class="interface-main">
            <div class="thought-card">Design System Philosophy</div>
            <div class="thought-card">Product Launch Strategy</div>
          </div>
        </div>
      </div>
      
      <div class="float-element" style="top: 10%; left: 10%;">ðŸ§ </div>
      <div class="float-element" style="top: 20%; right: 15%;">ðŸ’¡</div>
      <div class="float-element" style="bottom: 30%; left: 20%;">ðŸ”—</div>
      <div class="float-element" style="bottom: 10%; right: 10%;">âš¡</div>
    </div>
  </div>
</section>
```

```css
/* Hero Section */
.hero-section {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  padding: 2rem 0;
}

.hero-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 1;
}

.bg-grid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image:
    linear-gradient(rgba(255, 255, 255, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.03) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: gridMove 20s linear infinite;
}

.gradient-orb {
  position: absolute;
  border-radius: 50%;
  filter: blur(60px);
  opacity: 0.4;
}

.orb-1 {
  top: -20%;
  left: 10%;
  width: 300px;
  height: 300px;
  background: radial-gradient(circle, #667eea, transparent);
}

.orb-2 {
  bottom: -20%;
  right: 10%;
  width: 400px;
  height: 400px;
  background: radial-gradient(circle, #764ba2, transparent);
}

.orb-3 {
  top: 50%;
  left: -10%;
  width: 250px;
  height: 250px;
  background: radial-gradient(circle, #06b6d4, transparent);
}

.hero-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 2rem;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 4rem;
  align-items: center;
  position: relative;
  z-index: 2;
}

.hero-badge {
  position: relative;
  display: inline-block;
  padding: 0.5rem 1rem;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2rem;
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  margin-bottom: 2rem;
  overflow: hidden;
}

.badge-glow {
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  animation: shimmer 3s infinite;
}

.hero-title {
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 700;
  line-height: 1.1;
  margin-bottom: 1.5rem;
  color: white;
}

.gradient-text {
  background: linear-gradient(135deg, #ffd89b 0%, #19547b 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.hero-description {
  font-size: 1.25rem;
  color: rgba(255, 255, 255, 0.8);
  margin-bottom: 2rem;
  line-height: 1.6;
}

.hero-actions {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.cta-primary {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  padding: 1rem 2rem;
  border-radius: 0.5rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  font-size: 1rem;
}

.cta-primary:hover {
  transform: translateY(-2px);
  box-shadow: 0 12px 40px rgba(102, 126, 234, 0.4);
}

.cta-secondary {
  background: rgba(255, 255, 255, 0.1);
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.2);
  padding: 1rem 2rem;
  border-radius: 0.5rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  backdrop-filter: blur(10px);
  font-size: 1rem;
}

.cta-secondary:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: translateY(-2px);
}

/* App Preview */
.app-preview {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 1.5rem;
  padding: 1.5rem;
  transition: transform 0.1s ease;
}

.app-interface {
  display: grid;
  grid-template-columns: 200px 1fr;
  gap: 1rem;
  height: 300px;
}

.interface-sidebar {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 0.75rem;
  padding: 1rem;
}

.sidebar-item {
  padding: 0.5rem;
  margin-bottom: 0.5rem;
  border-radius: 0.5rem;
  color: rgba(255, 255, 255, 0.7);
  cursor: pointer;
  transition: all 0.2s ease;
}

.sidebar-item.active,
.sidebar-item:hover {
  background: rgba(255, 255, 255, 0.1);
  color: white;
}

.interface-main {
  background: rgba(255, 255, 255, 0.05);
  border-radius: 0.75rem;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.thought-card {
  background: rgba(255, 255, 255, 0.1);
  padding: 0.75rem;
  border-radius: 0.5rem;
  color: white;
  font-size: 0.875rem;
}

.float-element {
  position: absolute;
  font-size: 2rem;
  opacity: 0.6;
  animation: float 6s infinite ease-in-out;
  z-index: 3;
}

.float-element:nth-child(1) { animation-delay: 0s; }
.float-element:nth-child(2) { animation-delay: 1s; }
.float-element:nth-child(3) { animation-delay: 2s; }
.float-element:nth-child(4) { animation-delay: 3s; }

/* Animations */
@keyframes gridMove {
  0% { transform: translateX(0) translateY(0); }
  100% { transform: translateX(50px) translateY(50px); }
}

@keyframes shimmer {
  0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
  100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  33% { transform: translateY(-20px) rotate(120deg); }
  66% { transform: translateY(10px) rotate(240deg); }
}

/* Responsive */
@media (max-width: 768px) {
  .hero-container {
    grid-template-columns: 1fr;
    gap: 2rem;
    text-align: center;
  }
  
  .hero-actions {
    justify-content: center;
  }
  
  .app-interface {
    grid-template-columns: 1fr;
    height: auto;
  }
}
```

## 3. Navigation Header Component

```html
<!-- Navigation Header -->
<header class="nav-header">
  <nav class="nav-container">
    <div class="nav-logo">
      <div class="logo-icon">âš¡</div>
      <span class="logo-text">Nexus</span>
    </div>
    
    <div class="nav-links">
      <a href="#" class="nav-link">Features</a>
      <a href="#" class="nav-link">Pricing</a>
      <a href="#" class="nav-link">Updates</a>
      <a href="#" class="nav-link">Support</a>
    </div>
    
    <div class="nav-actions">
      <button class="nav-btn-secondary">Sign In</button>
      <button class="nav-btn-primary">Sign Up</button>
    </div>
    
    <button class="mobile-menu-btn" id="mobileMenuBtn">
      <span></span>
      <span></span>
      <span></span>
    </button>
  </nav>
</header>
```

```css
/* Navigation Header */
.nav-header {
  position: sticky;
  top: 0;
  z-index: 50;
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(20px);
  border-bottom: 1px solid rgba(0, 0, 0, 0.05);
}

.nav-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1rem 2rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.nav-logo {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-weight: 700;
  font-size: 1.25rem;
  color: #1a1a1a;
  text-decoration: none;
}

.logo-icon {
  width: 32px;
  height: 32px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-size: 1rem;
}

.nav-links {
  display: flex;
  gap: 2rem;
  align-items: center;
}

.nav-link {
  color: #4a5568;
  text-decoration: none;
  font-weight: 500;
  transition: color 0.2s ease;
  position: relative;
}

.nav-link:hover {
  color: #667eea;
}

.nav-link::after {
  content: '';
  position: absolute;
  bottom: -4px;
  left: 0;
  width: 0;
  height: 2px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  transition: width 0.3s ease;
}

.nav-link:hover::after {
  width: 100%;
}

.nav-actions {
  display: flex;
  gap: 0.75rem;
  align-items: center;
}

.nav-btn-secondary {
  background: transparent;
  color: #4a5568;
  border: 1px solid #e2e8f0;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.nav-btn-secondary:hover {
  background: #f7fafc;
  border-color: #cbd5e0;
}

.nav-btn-primary {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 0.5rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.nav-btn-primary:hover {
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
}

.mobile-menu-btn {
  display: none;
  flex-direction: column;
  gap: 4px;
  background: none;
  border: none;
  cursor: pointer;
  padding: 0.5rem;
}

.mobile-menu-btn span {
  width: 20px;
  height: 2px;
  background: #4a5568;
  transition: all 0.3s ease;
}

/* Dark theme */
.nav-header.dark {
  background: rgba(0, 0, 0, 0.8);
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.nav-header.dark .nav-logo {
  color: #f7fafc;
}

.nav-header.dark .nav-link {
  color: #a0aec0;
}

.nav-header.dark .nav-link:hover {
  color: #667eea;
}

.nav-header.dark .nav-btn-secondary {
  color: #a0aec0;
  border-color: rgba(255, 255, 255, 0.1);
}

.nav-header.dark .nav-btn-secondary:hover {
  background: rgba(255, 255, 255, 0.05);
  border-color: rgba(255, 255, 255, 0.2);
}

/* Mobile */
@media (max-width: 768px) {
  .nav-links {
    display: none;
  }
  
  .nav-actions {
    display: none;
  }
  
  .mobile-menu-btn {
    display: flex;
  }
}
```

## 4. Stacked Card Component

```html
<!-- Stacked Card Component -->
<div class="stacked-cards-container">
  <div class="stacked-card" data-index="0">
    <div class="card-header">
      <div class="company-logo">S</div>
      <div class="company-info">
        <h3 class="company-name">Sequoia Capital</h3>
        <p class="company-location">Sand Hill Road, Menlo Park</p>
      </div>
      <div class="funding-badge">Series A-C</div>
    </div>
    
    <div class="card-stats">
      <div class="stat">
        <span class="stat-value">$12.8B</span>
        <span class="stat-label">AUM</span>
      </div>
      <div class="stat">
        <span class="stat-value">89%</span>
        <span class="stat-label">Success Rate</span>
      </div>
      <div class="stat">
        <span class="stat-value">9</span>
        <span class="stat-label">Portfolio</span>
      </div>
    </div>
  </div>
  
  <div class="stacked-card" data-index="1">
    <div class="card-header">
      <div class="company-logo">A</div>
      <div class="company-info">
        <h3 class="company-name">Andreessen Horowitz</h3>
        <p class="company-location">Menlo Park, CA</p>
      </div>
      <div class="funding-badge">Seed-B</div>
    </div>
    
    <div class="card-stats">
      <div class="stat">
        <span class="stat-value">$35B</span>
        <span class="stat-label">AUM</span>
      </div>
      <div class="stat">
        <span class="stat-value">92%</span>
        <span class="stat-label">Success Rate</span>
      </div>
      <div class="stat">
        <span class="stat-value">12</span>
        <span class="stat-label">Portfolio</span>
      </div>
    </div>
  </div>
  
  <div class="stacked-card" data-index="2">
    <div class="card-header">
      <div class="company-logo">K</div>
      <div class="company-info">
        <h3 class="company-name">Kleiner Perkins</h3>
        <p class="company-location">Menlo Park, CA</p>
      </div>
      <div class="funding-badge">Series A-D</div>
    </div>
    
    <div class="card-stats">
      <div class="stat">
        <span class="stat-value">$8.2B</span>
        <span class="stat-label">AUM</span>
      </div>
      <div class="stat">
        <span class="stat-value">85%</span>
        <span class="stat-label">Success Rate</span>
      </div>
      <div class="stat">
        <span class="stat-value">7</span>
        <span class="stat-label">Portfolio</span>
      </div>
    </div>
  </div>
</div>
```

```css
/* Stacked Cards */
.stacked-cards-container {
  position: relative;
  width: 320px;
  height: 400px;
  perspective: 1000px;
}

.stacked-card {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 300px;
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 1.5rem;
  padding: 1.5rem;
  cursor: pointer;
  transition: all 0.6s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  transform-origin: center bottom;
}

.stacked-card[data-index="0"] {
  z-index: 3;
  transform: translateY(0) scale(1);
}

.stacked-card[data-index="1"] {
  z-index: 2;
  transform: translateY(20px) scale(0.95);
  opacity: 0.8;
}

.stacked-card[data-index="2"] {
  z-index: 1;
  transform: translateY(40px) scale(0.9);
  opacity: 0.6;
}

.stacked-card:hover {
  transform: translateY(-10px) scale(1.02);
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.2);
}

.card-header {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
  margin-bottom: 2rem;
}

.company-logo {
  width: 48px;
  height: 48px;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 700;
  font-size: 1.25rem;
}

.company-info {
  flex: 1;
}

.company-name {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 0.25rem 0;
  color: #1a1a1a;
}

.company-location {
  font-size: 0.875rem;
  color: #6b7280;
  margin: 0;
}

.funding-badge {
  background: rgba(102, 126, 234, 0.1);
  color: #667eea;
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.75rem;
  font-weight: 500;
}

.card-stats {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
}

.stat {
  text-align: center;
}

.stat-value {
  display: block;
  font-size: 1.5rem;
  font-weight: 700;
  color: #1a1a1a;
}

.stat-label {
  display: block;
  font-size: 0.75rem;
  color: #6b7280;
  margin-top: 0.25rem;
}
```

## 5. Feature Card Component

```html
<!-- Feature Card -->
<div class="feature-card">
  <div class="feature-image">
    <div class="feature-icon">ðŸš€</div>
  </div>
  <div class="feature-content">
    <h3 class="feature-title">Lightning Fast</h3>
    <p class="feature-description">Experience sub-millisecond response times with our globally distributed edge network.</p>
    <div class="feature-tags">
      <span class="feature-tag">Performance</span>
      <span class="feature-tag">Global CDN</span>
    </div>
  </div>
</div>
```

```css
/* Feature Card */
.feature-card {
  background: rgba(255, 255, 255, 0.05);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 1.5rem;
  overflow: hidden;
  transition: all 0.3s ease;
  cursor: pointer;
}

.feature-card:hover {
  transform: translateY(-4px);
  border-color: rgba(102, 126, 234, 0.4);
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
}

.feature-image {
  height: 180px;
  background: linear-gradient(135deg, #667eea20 0%, #764ba220 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
}

.feature-icon {
  font-size: 3rem;
  filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.1));
}

.feature-image::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, transparent 0%, rgba(102, 126, 234, 0.1) 100%);
  transition: opacity 0.3s ease;
  opacity: 0;
}

.feature-card:hover .feature-image::before {
  opacity: 1;
}

.feature-content {
  padding: 1.5rem;
}

.feature-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 0.75rem 0;
  color: #1a1a1a;
}

.feature-description {
  color: #6b7280;
  line-height: 1.6;
  margin: 0 0 1rem 0;
}

.feature-tags {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
}

.feature-tag {
  background: rgba(102, 126, 234, 0.1);
  color: #667eea;
  padding: 0.25rem 0.75rem;
  border-radius: 1rem;
  font-size: 0.75rem;
  font-weight: 500;
}
```

## 6. JavaScript for Interactive Components

```javascript
// 3D Transform Effect for App Preview
function init3DEffect() {
  const appPreview = document.getElementById('appPreview');
  if (!appPreview) return;

  appPreview.addEventListener('mousemove', (e) => {
    const rect = appPreview.getBoundingClientRect();
    const centerX = rect.left + rect.width / 2;
    const centerY = rect.top + rect.height / 2;
    
    const rotateX = ((e.clientY - centerY) / centerY) * -10;
    const rotateY = ((e.clientX - centerX) / centerX) * 10;
    
    appPreview.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;
  });

  appPreview.addEventListener('mouseleave', () => {
    appPreview.style.transform = 'perspective(1000px) rotateX(0deg) rotateY(0deg)';
  });
}

// Stacked Cards Interaction
function initStackedCards() {
  const container = document.querySelector('.stacked-cards-container');
  const cards = document.querySelectorAll('.stacked-card');
  
  if (!container || !cards.length) return;

  cards.forEach((card, index) => {
    card.addEventListener('click', () => {
      // Move clicked card to top
      cards.forEach((c, i) => {
        c.setAttribute('data-index', (i - index + cards.length) % cards.length);
        c.style.zIndex = cards.length - ((i - index + cards.length) % cards.length);
      });
      
      // Update transforms
      updateStackedCards();
    });
  });
}

function updateStackedCards() {
  const cards = document.querySelectorAll('.stacked-card');
  
  cards.forEach((card) => {
    const index = parseInt(card.getAttribute('data-index'));
    const translateY = index * 20;
    const scale = 1 - (index * 0.05);
    const opacity = 1 - (index * 0.2);
    
    card.style.transform = `translateY(${translateY}px) scale(${scale})`;
    card.style.opacity = opacity;
    card.style.zIndex = cards.length - index;
  });
}

// Theme Toggle
function initThemeToggle() {
  const themeToggle = document.getElementById('themeToggle');
  if (!themeToggle) return;

  themeToggle.addEventListener('click', () => {
    document.body.classList.toggle('dark-theme');
    
    // Update all components with dark class
    const components = document.querySelectorAll('.glass-card, .nav-header');
    components.forEach(component => {
      component.classList.toggle('dark');
    });
    
    // Save preference
    localStorage.setItem('theme', document.body.classList.contains('dark-theme') ? 'dark' : 'light');
  });
  
  // Load saved theme
  const savedTheme = localStorage.getItem('theme');
  if (savedTheme === 'dark') {
    document.body.classList.add('dark-theme');
    const components = document.querySelectorAll('.glass-card, .nav-header');
    components.forEach(component => {
      component.classList.add('dark');
    });
  }
}

// Mobile Menu Toggle
function initMobileMenu() {
  const mobileMenuBtn = document.getElementById('mobileMenuBtn');
  const navLinks = document.querySelector('.nav-links');
  const navActions = document.querySelector('.nav-actions');
  
  if (!mobileMenuBtn) return;

  mobileMenuBtn.addEventListener('click', () => {
    mobileMenuBtn.classList.toggle('active');
    navLinks.classList.toggle('mobile-active');
    navActions.classList.toggle('mobile-active');
  });
}

// Intersection Observer for Animations
function initScrollAnimations() {
  const animatedElements = document.querySelectorAll('.fade-in, .slide-in-left, .slide-in-right');
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        entry.target.classList.add('animate');
      }
    });
  }, {
    threshold: 0.1,
    rootMargin: '0px 0px -50px 0px'
  });

  animatedElements.forEach(el => observer.observe(el));
}

// Initialize all components
document.addEventListener('DOMContentLoaded', () => {
  init3DEffect();
  initStackedCards();
  initThemeToggle();
  initMobileMenu();
  initScrollAnimations();
});
```

## 7. Additional CSS for Animations

```css
/* Animation Classes */
.fade-in {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s ease-out;
}

.fade-in.animate {
  opacity: 1;
  transform: translateY(0);
}

.slide-in-left {
  opacity: 0;
  transform: translateX(-50px);
  transition: all 0.8s ease-out;
}

.slide-in-left.animate {
  opacity: 1;
  transform: translateX(0);
}

.slide-in-right {
  opacity: 0;
  transform: translateX(50px);
  transition: all 0.8s ease-out;
}

.slide-in-right.animate {
  opacity: 1;
  transform: translateX(0);
}

/* Dark Theme Global Styles */
.dark-theme {
  background: #000;
  color: #f7fafc;
}

.dark-theme .feature-card .feature-title {
  color: #f7fafc;
}

.dark-theme .feature-card .feature-description {
  color: #a0aec0;
}

.dark-theme .company-name {
  color: #f7fafc;
}

.dark-theme .stat-value {
  color: #f7fafc;
}

/* Mobile Menu Styles */
.mobile-menu-btn.active span:nth-child(1) {
  transform: rotate(45deg) translate(5px, 5px);
}

.mobile-menu-btn.active span:nth-child(2) {
  opacity: 0;
}

.mobile-menu-btn.active span:nth-child(3) {
  transform: rotate(-45deg) translate(7px, -6px);
}

@media (max-width: 768px) {
  .nav-links.mobile-active,
  .nav-actions.mobile-active {
    display: flex;
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(20px);
    border-top: 1px solid rgba(0, 0, 0, 0.05);
    flex-direction: column;
    padding: 1rem 2rem;
    gap: 1rem;
  }
}
```

These components are fully modular and can be easily integrated into any website. Each component includes:

- **Responsive design** that works on all devices
- **Dark/light theme support** with smooth transitions
- **Interactive animations** and hover effects
- **Glassmorphism effects** with backdrop blur
- **Performance-optimized** CSS animations
- **Accessibility features** with proper focus states
- **Modern CSS Grid and Flexbox** layouts

You can mix and match these components, customize colors through CSS variables, and extend functionality as needed for your specific projects.

[1](https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/1425449/5bd4012e-86e0-4b87-90c7-538847fc9b01/css-focused-documentation.md)
[2](https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/1425449/68ff8f03-1162-4f83-a15a-06f9e4dd48e0/website-visual-doc.txt)
[3](https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/1425449/5afa3959-8bc8-4080-a827-13f5004d2fb8/aura-build.html)
[4](https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/1425449/75e7c93e-be9a-4feb-9c6b-5be07351d185/aura-nexus.html)
[5](https://ppl-ai-file-upload.s3.amazonaws.com/web/direct-files/attachments/1425449/d3fc9762-8124-4499-be84-53f75818e033/aura-stacked-card.html)